OOPS CONCEPT Assignment

namespace LitwareLib
{
    class Employee
    {
        public int empno{get;set;}
        public string empname{get;set}
        public double salary{get;set}
        public double HRA{get;set;}
        public double TA{get;set;}
        public double DA{get;set}
        public double PF{get;set;}
        public double TDS{get;set;}
        public double NetSalary{get;set;}
        public double GrossSalary{get;set;}
            
    }
class Employee_Information{
    static void Main(string[] args)
    {
        Employee emp=new employee();
        Console.WriteLine("Enter Empno :");
        emp.empno=int.Parse(Console.ReadLine());
        Console.WriteLine("Enter Empname :");
        emp.empname=int.Parse(Console.ReadLine());
        Console.WriteLine("Enter Salary :");
        emp.salary=double.Parse(Console.ReadLine());
        double HRAY,TA,DA,GrossSalary;
        if(emp.Salary<5000)
        {
            HRA=emp.Salary*10/100;
            TA=emp.Salary*5/100;
            DA=emp.Salary*15/100;
            Console.WriteLine("HRA is {0},TA is{1} and DA is{2}",HRA,TA,DA);
            GrossSalary = emp.Salary+HRA+TA+DA;
            Console.WriteLine("GrossSalary:{0},GrossSalary");
            double Result=CalculateSalary(GrossSalary);
            Console.WriteLine("NetSalary={0}",Result);
        }
         if(emp.Salary<10000)
        {
            HRA=emp.Salary*10/100;
            TA=emp.Salary*5/100;
            DA=emp.Salary*15/100;
            Console.WriteLine("HRA is {0},TA is{1},DA is{2}",HRA,TA,DA);
            GrossSalary = emp.Salary+HRA+TA+DA;
            Console.WriteLine("GrossSalary:{0},GrossSalary");
            double Result=CalculateSalary(GrossSalary);
            Console.WriteLine("NetSalary={0}",Result);
        }
         if(emp.Salary<15000)
        {
            HRA=emp.Salary*10/100;
            TA=emp.Salary*5/100;
            DA=emp.Salary*15/100;
            Console.WriteLine("HRA is {0},TA is{1},DA is{2}",HRA,TA,DA);
            GrossSalary = emp.Salary+HRA+TA+DA;
            Console.WriteLine("GrossSalary:{0},GrossSalary");
            double Result=CalculateSalary(GrossSalary);
            Console.WriteLine("NetSalary={0}",Result);
        }
         if(emp.Salary<20000)
        {
            HRA=emp.Salary*10/100;
            TA=emp.Salary*5/100;
            DA=emp.Salary*15/100;
            Console.WriteLine("HRA is {0},TA is{1},DA is{2}",HRA,TA,DA);
            GrossSalary = emp.Salary+HRA+TA+DA;
            Console.WriteLine("GrossSalary:{0},GrossSalary");
            double Result=CalculateSalary(GrossSalary);
            Console.WriteLine("NetSalary={0}",Result);
        }
  }
  static double CalculateSalary(double GrossSalary)
    {
      double PF,TDS;
      double NetSalary=0;
      PF = GrossSalary* 10/100;
      TDS=GrossSalary *18/100;
      NetSalary =GrossSalary-(PF+TDS);
      return NetSalary;
     }
  }   
}
------------------------------------------------------------------------------------
Assignment no 3
using System;
using System.Collections.Generic;
using System.Text;

namespace Assignment3
{
    public interface IPrintable
    {
        void DisplayDetails();
    }
    public abstract class Employee
    {
        public int EmployeeId { get; set; }
        public string Name { get; set; }
        public float Salary { get; set; }
        public float GrossSalary { get; set; }

        public abstract float CalculateSalary();

    }
    public class Manager : Employee, IPrintable
    {
        public override float CalculateSalary()
        {
            float PetrolAllowance = 0.08f * Salary;
            float FoodAllowance = 0.13f * Salary;
            float OtherAllowance = 0.03f * Salary;
            GrossSalary = PetrolAllowance + FoodAllowance + OtherAllowance + Salary;
            return GrossSalary;
        }
        public void DisplayDetails()
        {
            var NetSalary = CalculateSalary();
            Console.WriteLine("Salary of Employee:" + NetSalary);
        }
    }
    public class MarketingExecutive : Employee, IPrintable
    {
        public float Kilometer { get; set; }
        public override float CalculateSalary()
        {
            float TourAllowance = 5 * Kilometer;
            GrossSalary = TourAllowance + 1000 + Salary;
            return GrossSalary;
        }
        public void DisplayDetails()
        {
            var NetSalary = CalculateSalary();
            Console.WriteLine("Salary of Employee:" + NetSalary);
        }

    }
}
---------------------------------------------------------------------------------------------------------------
using System;

namespace Assignment3
{
    public class Program
    {
        public static void Main(string[] args)
        {
            Manager manager = new Manager();
            MarketingExecutive marketingExecutive = new MarketingExecutive();
            Console.WriteLine("1 Manager");
            Console.WriteLine("2 MarketingExecutive");
            int ch = int.Parse(Console.ReadLine());
            switch (ch)
            {
                case 1:
                    Console.WriteLine("Enetr Employee ID");
                    manager.EmployeeId = int.Parse(Console.ReadLine());
                    Console.WriteLine("Enter Employee Name");
                    manager.Name = Console.ReadLine();
                    Console.WriteLine("Enter Salary");
                    manager.Salary = float.Parse(Console.ReadLine());
                    manager.DisplayDetails();
                    break;
                case 2:
                    Console.WriteLine("Enetr Employee ID");
                    marketingExecutive.EmployeeId = int.Parse(Console.ReadLine());
                    Console.WriteLine("Enter Name");
                    marketingExecutive.Name = Console.ReadLine();
                    Console.WriteLine("Enter Salary");
                    marketingExecutive.Salary = float.Parse(Console.ReadLine());
                    Console.WriteLine("Enter Kilometers:");
                    marketingExecutive.Kilometer = float.Parse(Console.ReadLine());
                    marketingExecutive.DisplayDetails();
                    break;
            }
        }
    }

}-----------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Text;

namespace Assignment3
{
    class Program2
    {
        public static void Main(string[] args)
        {
            Stack<int> s = new Stack<int>();
            s.Push(11);
            s.Push(12);
            s.Push(13);
            s.Push(14);
            s.Push(15);

            foreach (int i in s)
            {
                Console.WriteLine("Push Element in Array:" + i + ",");
            }
            s.Pop();
            s.Pop();
            foreach (int i in s)
            {
                Console.WriteLine("After Pop ,Element in Array:" + i + ",");
            }

        }
    }
}
------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Diagnostics;

namespace Assignment3
{
    public class Program3 : ICloneable
    {
        public int i;
        public int j;

        public Program3(int a, int b)
        {
            i = a;
            j = b;
        }

        public new string ToString()
        {
            return "(" + i + "," + j + ")";
        }

        public virtual object Cloning()
        {
            return new Program3(i, j);
        }
        object ICloneable.Clone()
        {
            return Cloning();
        }
    }

}


